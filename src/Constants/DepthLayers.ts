/**
 * 深度层级常量
 * 用于管理游戏中不同元素的渲染层级，防止层级冲突
 * 层级值越大，显示越靠前（越上层）
 */

export enum DepthLayers {
  // 背景层 (0-999)
  // 用于游戏中的背景元素，如天空、远景等

  /** 最基础的背景层，用于显示天空、远山等最远的背景元素 */
  BACKGROUND = 0,

  /** 背景装饰层，用于显示背景中的装饰物，如云朵、远处的树木等 */
  BACKGROUND_DECORATION = 500,

  // 游戏世界层 (1000-1999)
  // 用于游戏中的实际游戏元素，如地形、物体、角色等

  /** 游戏世界的地面层，用于显示地形、地板等 */
  WORLD_GROUND = 1000,

  /** 游戏世界的物体层，用于显示场景中的物体，如箱子、障碍物等 */
  WORLD_OBJECT = 1200,

  /** 游戏世界的实体层，用于显示游戏中的角色、敌人、NPC等 */
  WORLD_ENTITY = 1500,

  /** 游戏世界的特效层，用于显示游戏中的特效，如爆炸、魔法效果等 */
  WORLD_EFFECT = 1800,

  // 游戏UI层 (2000-2999)
  // 用于游戏中的UI元素，如血条、按钮、计分板等

  /** 游戏UI的背景层，用于显示UI面板的背景 */
  UI_BACKGROUND = 2000,

  /** 游戏UI的容器层，用于显示包含其他UI元素的容器 */
  UI_CONTAINER = 2200,

  /** 游戏UI的面板层，用于显示UI面板 */
  UI_PANEL = 2300,

  /** 游戏UI的元素层，用于显示UI中的按钮、文本、图标等 */
  UI_ELEMENT = 2500,

  /** 游戏UI的交互层，用于显示可交互的UI元素 */
  UI_INTERACTIVE = 2600,

  /** 游戏UI的前景层，用于显示UI中需要显示在最前面的元素，如提示、高亮效果等 */
  UI_FOREGROUND = 2800,

  /** 游戏UI的覆盖层，用于显示覆盖整个屏幕的UI元素，如暂停覆盖层、过场动画等 */
  UI_OVERLAY = 2900,

  // 系统UI层 (3000-3999)
  // 用于系统级别的UI元素，如通知、弹窗、模态框等

  /** 系统通知层，用于显示系统通知，如成就解锁、任务完成提示等 */
  SYSTEM_NOTIFICATION = 3000,

  /** 系统弹窗层，用于显示弹出窗口，如确认框、提示框等 */
  SYSTEM_POPUP = 3500,

  /** 系统模态层，用于显示模态窗口，如设置面板、游戏暂停菜单等 */
  SYSTEM_MODAL = 3800,

  // 最上层 (9000+)
  // 用于必须显示在最上层的元素

  /** 顶层，用于显示必须在所有其他元素之上的内容，如加载屏幕、场景过渡等 */
  TOP_LAYER = 9000,

  /** 调试层，用于显示调试信息，如FPS计数器、碰撞框、路径等 */
  DEBUG_LAYER = 9999
}
